package views

import (
	"gitlab.unjx.de/flohoss/godash/config"
	"gitlab.unjx.de/flohoss/godash/services"
	"gitlab.unjx.de/flohoss/godash/views/components"
)

templ Home(bookmarks []config.Category, links []config.Category, static *services.StaticInformation, live *services.LiveInformation, weather []services.Day) {
	<section class="flex flex-col justify-between min-h-screen">
		<div class="bg-base-200/90 dark:bg-base-200/40">
			<div class="container grid gap-10 lg:gap-16">
				@components.Weather(weather)
				<div class="grid grid-cols-1 lg:grid-cols-3 gap-3 lg:gap-10 select-none">
					@components.System("icon-[bi--cpu]", static.CPU.Name, "", static.CPU.Threads, "systemCpuPercentage", "", live.CPU)
					@components.System("icon-[bi--nvme]", live.Disk.Value, static.Disk.Total, static.Disk.Partitions, "systemDiskPercentage", "systemDiskValue", live.Disk.Percentage)
					@components.System("icon-[bi--memory]", live.Ram.Value, static.Ram.Total, static.Ram.Swap, "systemRamPercentage", "systemRamValue", live.Ram.Percentage)
				</div>
				@components.SystemScript()
			</div>
		</div>
		<div class="container flex-1 py-5 lg:py-10 grid">
			<div class="flex flex-col justify-evenly h-full gap-10">
				for _, a := range bookmarks {
					<div class="grid gap-4">
						if a.Category != "" {
							<div class="heading">{ a.Category }</div>
						}
						<div class="grid-apps">
							for _, entry := range a.Entries {
								@components.Application(entry)
							}
						</div>
					</div>
				}
			</div>
		</div>
		<div class="bg-base-200/90 dark:bg-base-200/40 w-full">
			<div class="footer container grid-apps">
				for _, l := range links {
					<div class="flex flex-col gap-2">
						if l.Category != "" {
							<div class="heading">{ l.Category }</div>
						} else {
							<div class="my-[0.9rem]"></div>
						}
						for _, entry := range l.Entries {
							@components.Link(entry)
						}
					</div>
				}
			</div>
		</div>
	</section>
}

templ HomeIndex(
	title string,
	cmp templ.Component,
) {
	@Base(title) {
		@cmp
	}
}
