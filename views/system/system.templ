package system

import "gitlab.unjx.de/flohoss/godash/services"

templ System() {
	<div id="usageChart" class="w-full h-10 rounded-md overflow-hidden"></div>
}

templ RamAndDiskBadges(latest services.UsagePoint) {
	<div class="absolute -top-2 right-5 distance font-mono">
		<div class="badge badge-sm distance">
			<span class="icon-[bi--memory]"></span>
			<span id="current-ram">{ latest.Ram }</span>
		</div>
		<div class="badge badge-sm distance">
			<span class="icon-[bi--hdd]"></span>
			<span id="current-disk">{ latest.Disk }</span>
		</div>
	</div>
}

templ Script(buffer []services.UsagePoint) {
	<script>
        const initialData = {{ buffer }};
        const chartDiv = document.getElementById('usageChart');
		function getCSSColor() {
			return getComputedStyle(document.documentElement)
				.getPropertyValue('--color-primary')
				.trim();
		}

        let width = chartDiv.clientWidth;
        const height = chartDiv.clientHeight;

        let x = d3.scaleLinear().domain([0, 59]).range([0, width]);
        const y = d3.scaleLinear().domain([0, 100]).range([height, 0]);

        const lineCPU = d3.line()
            .x((_, i) => x(i))
            .y(d => y(d))
            .curve(d3.curveBasis);

        const svg = d3.select("#usageChart")
            .append("svg")
            .attr("width", width)
            .attr("height", height);

        const pathCPU = svg.append("path").datum(initialData.map(d => d.cpu))
            .attr("fill", "none")
            .attr("stroke", getCSSColor())
            .attr("stroke-width", 1)
            .attr("d", lineCPU);

        function resize() {
            width = chartDiv.clientWidth;
            x.range([0, width]);
            svg.attr("width", width);
            pathCPU.attr("d", lineCPU(initialData.map(d => d.cpu)));
        }

        window.addEventListener('resize', resize);
		
		const classObserver = new MutationObserver(() => {
			pathCPU.attr("stroke", getCSSColor());
		});
		classObserver.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });

		const darkModeMedia = window.matchMedia('(prefers-color-scheme: dark)');
		darkModeMedia.addEventListener('change', () => {
			pathCPU.attr("stroke", getCSSColor());
		});

        let systemSSESource = null;
        addEventListener('beforeunload', () => {
            systemSSESource && systemSSESource.close();
        });

        systemSSESource = new EventSource('/sse?stream=system');
        systemSSESource.onmessage = (event) => {
            const data = JSON.parse(event.data);

			const ram = document.getElementById('current-ram');
			const disk = document.getElementById('current-disk');

			ram.innerText = data.ram;
			disk.innerText = data.disk;

            initialData.push(data);
            if (initialData.length > 60) initialData.shift();

            const cpuData = initialData.map(d => d.cpu);

            pathCPU.datum(cpuData)
                .transition()
                .duration(300)
                .ease(d3.easeLinear)
                .attr("d", lineCPU);
        };
    </script>
}
