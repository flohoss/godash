package system

import "gitlab.unjx.de/flohoss/godash/services"

templ System() {
	<canvas id="chart" width="1000" height="100" class="w-full h-18 rounded-md overflow-hidden"></canvas>
}

templ RamAndDiskBadges(system *services.Buffer) {
	<div class="absolute -top-2 right-5 distance font-mono whitespace-nowrap">
		<div class="badge badge-sm distance">
			<span class="icon-[bi--memory]"></span>
			<span id="current-ram">{ system.RAM }</span>
		</div>
		<div class="badge badge-sm distance">
			<span class="icon-[bi--hdd]"></span>
			<span id="current-disk">{ system.Disk }</span>
		</div>
		<div class="hidden sm:flex badge badge-sm distance">
			<span class="icon-[bi--cpu]"></span>
			<span id="current-cpu">{ system.CPUStr }</span>
		</div>
	</div>
}

templ Script(system *services.Buffer) {
	<script>
        function getCSSColor() {
            return getComputedStyle(document.documentElement)
            .getPropertyValue('--color-primary')
            .trim();
        }

        const initialData = {{ system }};
        const dataSet = new TimeSeries();
        for (let i = 0; i < initialData.cpu.length; i++) {
            dataSet.append(initialData.cpu[i].time, initialData.cpu[i].percent);
        }

        const systemSSESource = new EventSource('/sse?stream=system');
        systemSSESource.onmessage = (event) => {
            const data = JSON.parse(event.data);
            const latest = data.cpu[data.cpu.length - 1];
            dataSet.append(latest.time, latest.percent);

            document.getElementById('current-ram').innerText = data.ram;
            document.getElementById('current-disk').innerText = data.disk;
            document.getElementById('current-cpu').innerText = data.cpu_str;
        };

        var chart = new SmoothieChart(
            {
                millisPerPixel: 60,
                grid: { fillStyle: 'transparent', strokeStyle: 'transparent', borderVisible: false },
                labels: { fillStyle: 'transparent', disabled: true },
                maxValue: 100,
                minValue: -0.1
            }
        );
        const canvas = document.getElementById('chart');

        chart.addTimeSeries(dataSet, { lineWidth: 2, strokeStyle: getCSSColor() });
        chart.streamTo(canvas, 500);
    </script>
}
